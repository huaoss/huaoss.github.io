(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{308:function(n,t,a){"use strict";a.r(t);var e=a(13),r=Object(e.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"js常用简洁封装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#js常用简洁封装"}},[n._v("#")]),n._v(" js常用简洁封装")]),n._v(" "),t("h2",{attrs:{id:"数组遍历方法效率对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组遍历方法效率对比"}},[n._v("#")]),n._v(" 数组遍历方法效率对比")]),n._v(" "),t("blockquote",[t("p",[n._v("for-len > for > for-of > forEach > map > for-in")])]),n._v(" "),t("p",[n._v("javascript原生遍历方法的建议用法：")]),n._v(" "),t("ul",[t("li",[n._v("用for循环遍历数组")]),n._v(" "),t("li",[n._v("用for...in遍历对象")]),n._v(" "),t("li",[n._v("用for...of遍历类数组对象（ES6）,使用Object.keys")]),n._v(" "),t("li",[n._v("用Object.keys()获取对象属性名的集合")])]),n._v(" "),t("p",[n._v("为何for… in会慢？\n因为for … in语法是第一个能够迭代对象键的JavaScript语句，循环对象键（{}）与在数组（[]）上进行循环不同，引擎会执行一些额外的工作来跟踪已经迭代的属性。因此不建议使用for...in来遍历数组")]),n._v(" "),t("h2",{attrs:{id:"根据日期计算星座"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#根据日期计算星座"}},[n._v("#")]),n._v(" 根据日期计算星座")]),n._v(" "),t("p",[t("code",[n._v("array.find(function(currentValue, index, arr),thisValue)")]),n._v(" 方法返回通过测试（函数内判断）的数组的第一个元素的值")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("const arr = [\n    { name: '白羊座', date: '3.21-4.19' },\n    { name: '金牛座', date: '4.20-5.20' },\n    { name: '双子座', date: '5.21-6.21' },\n    { name: '巨蟹座', date: '6.22-7.22' },\n    { name: '狮子座', date: '7.23-8.22' },\n    { name: '处女座', date: '8.23-9.22' },\n    { name: '天秤座', date: '9.23-10.23' },\n    { name: '天蝎座', date: '10.24-11.22' },\n    { name: '射手座', date: '11.23-12.21' },\n    { name: '摩羯座', date: '12.22-1.19' },\n    { name: '水瓶座', date: '1.20-2.18' },\n    { name: '双鱼座', date: '2.19-3.20' }\n];\n\n// function getSign(m, d) {\n//     const n = (+m) + (+d) / 100;\n//     const obj = arr.find(a => {\n//         const date = a.date.split('-');\n//         const min = +date[0];\n//         const max = +date[1];\n//         return n >= (n >= min && n <= max);\n//     });\n//     return obj.name;\n// };\n// console.log(this.getSign(05, 9))\n\nfunction getSign(m, d) {\n    const n = (+m) + (+d) / 100;\n    let name = '';\n    for (let i = 0; i < 12; i++) {\n        const date = arr[i].date.split('-');\n        const min = +date[0];\n        const max = +date[1];\n        if (n >= min && n <= max) {\n            name = arr[i].name;\n            break;\n        }\n    };\n    return name;\n};\nconsole.log(this.getSign(05, 09))   \n")])])]),t("h2",{attrs:{id:"合并json对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合并json对象"}},[n._v("#")]),n._v(" 合并Json对象")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("$.mergeJsonObject = function(jsonbject1, jsonbject2) {\nvar resultJsonObject = {};\nfor (var attr in jsonbject1) {\n    resultJsonObject[attr] = jsonbject1[attr];\n}\nfor (var attr in jsonbject2) {\n    resultJsonObject[attr] = jsonbject2[attr];\n}\nreturn resultJsonObject;\n};\n\nvar jsonObj1 = {a : 1};\nvar jsonObj2 = {b : 2, c : 3, d : 4};\n\nresult = {a : 1, b : 2, c: 3, d : 4}.\n")])])]),t("hr"),n._v(" "),t("hr"),n._v(" "),t("h4",{attrs:{id:"for、for-in、for-of"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for、for-in、for-of"}},[n._v("#")]),n._v(" for、for in、for of")]),n._v(" "),t("p",[t("code",[n._v("string.substr(start,length)")]),n._v(" 方法可在字符串中抽取从开始下标开始的指定数目的字符\n"),t("code",[n._v("string.charAt(index)")]),n._v(" 方法可返回指定位置的字符")])])}),[],!1,null,null,null);t.default=r.exports}}]);