(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{297:function(e,l,a){"use strict";a.r(l);var n=a(13),s=Object(n.a)({},(function(){var e=this,l=e._self._c;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h2",{attrs:{id:"一-getelementsbyclassname"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#一-getelementsbyclassname"}},[e._v("#")]),e._v(" 一.getElementsByClassName()")]),e._v(" "),l("ul",[l("li",[e._v("其返回值是一个伪数组（元素集合），是通过索引来访问数组中的每一个元素的。")]),e._v(" "),l("li",[e._v("可以通过length属性来得到元素的个数。")])]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[e._v('<ul>\n    <li class="map1" id="map2"></li>\n    <li class="map1"></li>\n    <li></li>\n</ul>\n \n<script>\n     //获取所有class选择器为map1的元素，并将返回值赋给map\n    //即此时的map就是一个伪数组\n    var map=document.getElementsByClassName("map2");\n    \n    console.log(map.length);//打印出maps数组的元素个数\n    \n    for(var i=0;i<map.length;i++)//循环遍历每一个元素\n    {\n        console.log(map[i]);//通过过索引访问\n    }\n \n<\/script>\n')])])]),l("h2",{attrs:{id:"二-queryselector"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#二-queryselector"}},[e._v("#")]),e._v(" 二.querySelector()")]),e._v(" "),l("ul",[l("li",[e._v("querySelector() 方法返回文档中匹配指定 CSS选择器的一个元素。可以是class选择器、id选择器、标签选择器等。")]),e._v(" "),l("li",[e._v("需要注意的是：querySelector()方法仅仅返回匹配指定选择器的第一个元素。如果你需要返回所有的元素，请使用querySelectorAll() 方法替代。而querySelectorAll()方法的返回值是一个伪数组，具体用法和getElementsByClassName()方法类似。")])]),e._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[e._v('<ul>\n    <li class="map1" id="map2"></li>\n    <li class="map1"></li>\n    <li></li>\n</ul>\n<script>\n    //获取标签选择器为ul的元素\n    var ul1=document.querySelector("ul");\n \n    //获取id选择器为map2的元素\n    var a1=document.querySelector("#map2");\n \n \n    //获取class选择器为map1的元素\n    //且为第一个li元素\n    var a2=document.querySelector(".map1");\n \n \n  //获取class选择器为map1的所有元素\n    var a3=document.querySelectorAll(".map1");\n    for(var i=0;i<a3.length;i++)//循环遍历每一个元素\n    {\n        console.log(a3[i]);//通过过索引访问\n    }\n \n    console.log(a1);\n    console.log(a2);\n<\/script>\n')])])])])}),[],!1,null,null,null);l.default=s.exports}}]);